{"ast":null,"code":"export const initialState = {\n  cartItem: [],\n  noOfItem: 0\n};\nexport const pizzaStoreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"setCartItem\":\n      if (state.cartItem.find(item => item.id === payload.id && item.amount === payload.amount && item.size.size === payload.size.size)) {\n        const newItem = state.cartItem.map(varietal => {\n          if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n            return { ...varietal,\n              finalAmount: varietal.amount * (varietal.quantity + 1),\n              quantity: varietal.quantity + 1\n            };\n          }\n\n          return varietal;\n        });\n        return { ...state,\n          cartItem: newItem\n        };\n      } else return { ...state,\n        cartItem: [...state.cartItem, { ...payload,\n          finalAmount: payload.amount,\n          quantity: 1\n        }]\n      };\n\n    case \"deleteCartItem\":\n      if (state.cartItem.find(item => item.id === payload.id && item.amount === payload.amount && item.size.size === payload.size.size && item.quantity > 1)) {\n        console.log(\"I entered\");\n        const newItem = state.cartItem.map(varietal => {\n          if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n            return { ...varietal,\n              finalAmount: varietal.finalAmount - varietal.amount,\n              quantity: varietal.quantity - 1\n            };\n          }\n\n          return varietal;\n        });\n        return { ...state,\n          cartItem: newItem\n        };\n      } else {\n        const newItem = state.cartItem.filter((varietal, index) => {\n          if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n            return false;\n          }\n\n          return varietal;\n        });\n        console.log(\"After Del: \", newItem);\n        return { ...state,\n          cartItem: newItem\n        };\n      }\n\n    case \"setNoOfItem\":\n      return { ...state,\n        noOfItem: payload\n      };\n\n    case \"setEmptyCart\":\n      return { ...state,\n        cartItem: [],\n        noOfItem: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/kratika_offf/E-Pizza-Store-master/E-Pizza-Store-master/src/context/Reducer.js"],"names":["initialState","cartItem","noOfItem","pizzaStoreReducer","state","action","type","payload","find","item","id","amount","size","newItem","map","varietal","finalAmount","quantity","console","log","filter","index"],"mappings":"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","sourcesContent":["export const initialState = {\n    cartItem: [],\n    noOfItem: 0,\n}\n\nexport const pizzaStoreReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case \"setCartItem\":\n            if (state.cartItem.find((item) => item.id === payload.id && item.amount === payload.amount && item.size.size === payload.size.size)) {\n                const newItem = state.cartItem.map((varietal) => {\n                    if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n                        return { ...varietal, finalAmount: varietal.amount * (varietal.quantity + 1), quantity: varietal.quantity + 1 };\n                    }\n                    return varietal;\n                });\n                return {\n                    ...state,\n                    cartItem: newItem,\n                };\n            }\n            else\n                return {\n                    ...state,\n                    cartItem: [...state.cartItem, { ...payload, finalAmount: payload.amount, quantity: 1 }],\n                };\n        case \"deleteCartItem\":\n            if (state.cartItem.find((item) => item.id === payload.id && item.amount === payload.amount && item.size.size === payload.size.size && item.quantity > 1)) {\n                console.log(\"I entered\");\n                const newItem = state.cartItem.map((varietal) => {\n                    if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n                        return { ...varietal, finalAmount: varietal.finalAmount - varietal.amount, quantity: varietal.quantity - 1 };\n                    }\n                    return varietal;\n                });\n                return {\n                    ...state,\n                    cartItem: newItem,\n                };\n            }\n            else {\n                const newItem = state.cartItem.filter((varietal, index) => {\n                    if (varietal.id === payload.id && varietal.amount === payload.amount && varietal.size.size === payload.size.size) {\n                        return false;\n                    }\n                    return varietal;\n                });\n                console.log(\"After Del: \", newItem);\n                return {\n                    ...state,\n                    cartItem: newItem,\n                };\n\n            }\n        case \"setNoOfItem\":\n            return {\n                ...state,\n                noOfItem: payload,\n            }\n        case \"setEmptyCart\":\n            return {\n                ...state,\n                cartItem: [],\n                noOfItem: 0,\n            }\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}