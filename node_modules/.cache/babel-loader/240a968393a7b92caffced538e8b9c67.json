{"ast":null,"code":"var _jsxFileName = \"D:\\\\kratika_offf\\\\E-Pizza-Store-master\\\\E-Pizza-Store-master\\\\src\\\\components\\\\Dialog\\\\Dialog.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { PizzaStoreContext } from '../../context/Context';\nimport Typography from '@mui/material/Typography';\nimport nonVeg from '../../assets/non-veg.png';\nimport veg from '../../assets/veg.png'; // import GroupButton from '../GroupButton/GroupButton';\n\nimport GooglePayButton from \"@google-pay/button-react\";\nimport './Dialog.scss';\nimport Gbutton from './Gbutton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDialog = styled(Dialog)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .MuiDialogContent-root': {\n      padding: theme.spacing(2)\n    },\n    '& .MuiDialogActions-root': {\n      padding: theme.spacing(1)\n    }\n  };\n});\n_c = BootstrapDialog;\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n};\nexport default function CustomizedDialogs(_ref2) {\n  _s();\n\n  let {\n    openCart,\n    setopenCart\n  } = _ref2;\n  const {\n    state: {\n      cartItem\n    },\n    PizzaStoreContextDispatch\n  } = React.useContext(PizzaStoreContext);\n  const subTotal = cartItem.map(item => item.finalAmount).reduce((prev, curr) => prev + curr, 0);\n\n  const handleClose = () => {\n    setopenCart(false);\n  };\n\n  const emptyCart = () => {\n    PizzaStoreContextDispatch({\n      type: \"setEmptyCart\"\n    });\n    setopenCart(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BootstrapDialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: openCart // \n      ,\n      children: [/*#__PURE__*/_jsxDEV(BootstrapDialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            lineHeight: \"1rem\"\n          },\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: subTotal === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"400px\"\n          },\n          children: \"Please Select Pizza to Add in the Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this) : cartItem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Itype\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.isVeg ? veg : nonVeg,\n                alt: \"veg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rightSec\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"first\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"div1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [item.quantity, \" X \\u20B9\", item.amount, \"  :  \\u20B9\", item.finalAmount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Size: \", item.size.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Toppings: \", item.toppings.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"div2\",\n                  children: /*#__PURE__*/_jsxDEV(Gbutton, {\n                    pizza: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        style: {\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          justifyContent: \"left\",\n          alignItems: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"SubTotal: \\u20B9\", subTotal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: emptyCart,\n          variant: \"primary\",\n          style: {\n            border: \"none\",\n            backgroundColor: \"black\",\n            width: \"100%\"\n          },\n          fullWidth: true,\n          disabled: subTotal === 0 ? true : false,\n          children: /*#__PURE__*/_jsxDEV(GooglePayButton, {\n            environment: \"TEST\",\n            buttonSizeMode: \"static\",\n            buttonType: \"order\",\n            paymentRequest: {\n              apiVersion: 2,\n              apiVersionMinor: 0,\n              allowedPaymentMethods: [{\n                type: \"CARD\",\n                parameters: {\n                  allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                  allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\n                },\n                tokenizationSpecification: {\n                  type: \"PAYMENT_GATEWAY\",\n                  parameters: {\n                    gateway: \"example\",\n                    gatewayMerchantId: \"exampleGatewayMerchantId\"\n                  }\n                }\n              }],\n              merchantInfo: {\n                merchantId: \"12345678901234567890\",\n                merchantName: \"Demo Merchant Ozair\"\n              },\n              transactionInfo: {\n                totalPriceStatus: \"FINAL\",\n                totalPriceLabel: \"Total\",\n                totalPrice: subTotal.toString(),\n                currencyCode: \"INR\",\n                countryCode: \"IN\"\n              },\n              shippingAddressRequired: true,\n              callbackIntents: [\"SHIPPING_ADDRESS\", \"PAYMENT_AUTHORIZATION\"]\n            },\n            onLoadPaymentData: paymentRequest => {\n              console.log(\"Success\", paymentRequest);\n            },\n            onPaymentAuthorized: paymentData => {\n              console.log(\"Payment Authorised Success\", paymentData);\n              return {\n                transactionState: \"SUCCESS\"\n              };\n            },\n            onPaymentDataChanged: paymentData => {\n              console.log(\"On Payment Data Changed\", paymentData);\n              return {};\n            },\n            existingPaymentMethodRequired: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedDialogs, \"M2g2bxQY1njx+FTBcZWwUqRf+W8=\");\n\n_c3 = CustomizedDialogs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BootstrapDialog\");\n$RefreshReg$(_c2, \"BootstrapDialogTitle\");\n$RefreshReg$(_c3, \"CustomizedDialogs\");","map":{"version":3,"sources":["D:/kratika_offf/E-Pizza-Store-master/E-Pizza-Store-master/src/components/Dialog/Dialog.jsx"],"names":["React","PropTypes","Button","styled","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","PizzaStoreContext","Typography","nonVeg","veg","GooglePayButton","Gbutton","BootstrapDialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey","propTypes","node","func","isRequired","CustomizedDialogs","openCart","setopenCart","state","cartItem","PizzaStoreContextDispatch","useContext","subTotal","map","item","finalAmount","reduce","prev","curr","handleClose","emptyCart","type","lineHeight","width","index","isVeg","name","quantity","amount","size","toppings","flexDirection","textAlign","justifyContent","alignItems","border","backgroundColor","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","toString","currencyCode","countryCode","shippingAddressRequired","callbackIntents","paymentRequest","console","log","paymentData","transactionState"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { PizzaStoreContext } from '../../context/Context'\nimport Typography from '@mui/material/Typography';\nimport nonVeg from '../../assets/non-veg.png'\nimport veg from '../../assets/veg.png'\n// import GroupButton from '../GroupButton/GroupButton';\nimport GooglePayButton from \"@google-pay/button-react\";\nimport './Dialog.scss'\nimport Gbutton from './Gbutton';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CustomizedDialogs({ openCart, setopenCart }) {\n\n\n  const {\n    state: { cartItem},\n    PizzaStoreContextDispatch,\n  } = React.useContext(PizzaStoreContext);\n  const subTotal = cartItem.map(item => item.finalAmount).reduce((prev, curr) => prev + curr, 0);\n\n  \n  const handleClose = () => {\n    setopenCart(false);\n  };\n\n  \n  const emptyCart = () => {\n    PizzaStoreContextDispatch({\n      type: \"setEmptyCart\",\n    });\n    setopenCart(false);\n  }\n\n  return (\n    <div>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openCart}\n      // \n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          <h3 style={{ lineHeight: \"1rem\" }}>Checkout</h3>\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          {subTotal === 0 ? <div style={{ width: \"400px\" }}>Please Select Pizza to Add in the Cart</div>\n            : cartItem.map((item, index) =>\n              <div className='outer' key={index}>\n                <div className='itemDiv'>\n                  <div className=\"Itype\">\n                    <img src={item.isVeg ? veg : nonVeg} alt=\"veg\" />\n                  </div>\n                  <div className='rightSec'>\n                    <div className='first'>\n                      <div className='div1'>\n                        <h3>{item.name}</h3>\n                        <h5>{item.quantity} X ₹{item.amount}  :  ₹{item.finalAmount}</h5>\n                        <p>Size: {item.size.size}</p>\n                        <p>Toppings: {item.toppings.name} </p>\n                      </div>\n                      <div className='div2'>\n                        <Gbutton pizza={item} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            )\n          }\n        </DialogContent>\n        <DialogActions style={{ flexDirection: \"column\", textAlign: \"left\", justifyContent: \"left\", alignItems: \"left\" }}>\n          <Typography variant='h6'>SubTotal: ₹{subTotal}</Typography>\n          {/* <Button variant=\"primary\" fullWidth style={{ width: \"100%\", background: \"#ff9e00\", color: \"#fff\", margin: \"10px\" }}>Pay - ${subTotal}</Button> */}\n          <Button\n            onClick={emptyCart}\n            variant=\"primary\"\n            style={{ border: \"none\", backgroundColor: \"black\", width: \"100%\" }}\n            fullWidth\n            disabled={subTotal === 0 ? true : false}\n          >\n            <GooglePayButton\n              environment=\"TEST\"\n              buttonSizeMode='static'\n              buttonType='order'\n              paymentRequest={{\n                apiVersion: 2,\n                apiVersionMinor: 0,\n                allowedPaymentMethods: [\n                  {\n                    type: \"CARD\",\n                    parameters: {\n                      allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                      allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\n                    },\n                    tokenizationSpecification: {\n                      type: \"PAYMENT_GATEWAY\",\n                      parameters: {\n                        gateway: \"example\",\n                        gatewayMerchantId: \"exampleGatewayMerchantId\",\n                      },\n                    },\n                  },\n                ],\n                merchantInfo: {\n                  merchantId: \"12345678901234567890\",\n                  merchantName: \"Demo Merchant Ozair\",\n                },\n                transactionInfo: {\n                  totalPriceStatus: \"FINAL\",\n                  totalPriceLabel: \"Total\",\n                  totalPrice: subTotal.toString(),\n                  currencyCode: \"INR\",\n                  countryCode: \"IN\",\n                },\n                shippingAddressRequired: true,\n                callbackIntents: [\"SHIPPING_ADDRESS\", \"PAYMENT_AUTHORIZATION\"],\n              }}\n              onLoadPaymentData={(paymentRequest) => {\n                console.log(\"Success\", paymentRequest);\n              }}\n              onPaymentAuthorized={(paymentData) => {\n                console.log(\"Payment Authorised Success\", paymentData);\n                return { transactionState: \"SUCCESS\" };\n              }}\n              onPaymentDataChanged={(paymentData) => {\n                console.log(\"On Payment Data Changed\", paymentData);\n                return {};\n              }}\n              existingPaymentMethodRequired=\"false\"\n            />\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}