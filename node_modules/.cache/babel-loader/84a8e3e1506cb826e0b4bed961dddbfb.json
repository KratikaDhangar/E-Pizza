{"ast":null,"code":"var _jsxFileName = \"D:\\\\kratika_offf\\\\E-Pizza-Store-master\\\\E-Pizza-Store-master\\\\src\\\\components\\\\toggleButton\\\\ToggleButton.jsx\";\nimport * as React from 'react'; // import FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\n// import FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\n// import FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\n\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport veg from \"../../assets/veg.png\";\nimport nonVeg from \"../../assets/non-veg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButtons(_ref) {\n  let {\n    type,\n    settype\n  } = _ref;\n\n  // const [alignment, setAlignment] = React.useState('all');\n  const handleAlignment = (event, newAlignment) => {\n    settype(newAlignment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    value: type,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"veg\",\n      \"aria-label\": \"left aligned\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: veg,\n        alt: \"Veg\",\n        style: {\n          width: \"30px\",\n          height: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"all\",\n      \"aria-label\": \"centered\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"non-veg\",\n      \"aria-label\": \"right aligned\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nonVeg,\n        alt: \"nonVeg\",\n        style: {\n          width: \"30px\",\n          height: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n} // import * as React from 'react';\n// import { useTheme } from '@mui/material/styles';\n// import OutlinedInput from '@mui/material/OutlinedInput';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 250,\n//     },\n//   },\n// };\n// const names = [\n//   'Oliver Hansen',\n//   'Van Henry',\n//   'April Tucker',\n//   'Ralph Hubbard',\n//   'Omar Alexander',\n//   'Carlos Abbott',\n//   'Miriam Wagner',\n//   'Bradley Wilkerson',\n//   'Virginia Andrews',\n//   'Kelly Snyder',\n// ];\n// function getStyles(name, personName, theme) {\n//   return {\n//     fontWeight:\n//       personName.indexOf(name) === -1\n//         ? theme.typography.fontWeightRegular\n//         : theme.typography.fontWeightMedium,\n//   };\n// }\n// export default function MultipleSelect() {\n//   const theme = useTheme();\n//   const [personName, setPersonName] = React.useState([]);\n//   const handleChange = (event) => {\n//     const {\n//       target: { value },\n//     } = event;\n//     setPersonName(\n//       // On autofill we get a stringified value.\n//       typeof value === 'string' ? value.split(',') : value,\n//     );\n//   };\n//   return (\n//     <div>\n//       <FormControl sx={{ m: 1, width: 300 }}>\n//         <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n//         <Select\n//           labelId=\"demo-multiple-name-label\"\n//           id=\"demo-multiple-name\"\n//           multiple\n//           value={personName}\n//           onChange={handleChange}\n//           input={<OutlinedInput label=\"Name\" />}\n//           MenuProps={MenuProps}\n//         >\n//           {names.map((name) => (\n//             <MenuItem\n//               key={name}\n//               value={name}\n//               style={getStyles(name, personName, theme)}\n//             >\n//               {name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//     </div>\n//   );\n// }\n\n_c = ToggleButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButtons\");","map":{"version":3,"sources":["D:/kratika_offf/E-Pizza-Store-master/E-Pizza-Store-master/src/components/toggleButton/ToggleButton.jsx"],"names":["React","ToggleButton","ToggleButtonGroup","veg","nonVeg","ToggleButtons","type","settype","handleAlignment","event","newAlignment","width","height"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,eAAe,SAASC,aAAT,OAAwC;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAiB;;AACnD;AAEA,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;AAC7CH,IAAAA,OAAO,CAACG,YAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,iBAAD;AACI,IAAA,KAAK,EAAEJ,IADX;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,QAAQ,EAAEE,eAHd;AAII,kBAAW,gBAJf;AAAA,4BAMI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,KAApB;AAA0B,oBAAW,cAArC;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEL,GAAV;AAAe,QAAA,GAAG,EAAC,KAAnB;AAAyB,QAAA,KAAK,EAAE;AAACQ,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eASI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,KAApB;AAA0B,oBAAW,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,SAApB;AAA8B,oBAAW,eAAzC;AAAA,6BACI;AAAK,QAAA,GAAG,EAAER,MAAV;AAAkB,QAAA,GAAG,EAAC,QAAtB;AAA+B,QAAA,KAAK,EAAE;AAACO,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA3GwBP,a","sourcesContent":["import * as React from 'react';\n// import FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\n// import FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\n// import FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport veg from \"../../assets/veg.png\"\nimport nonVeg from \"../../assets/non-veg.png\"\n\nexport default function ToggleButtons({type, settype}) {\n    // const [alignment, setAlignment] = React.useState('all');\n\n    const handleAlignment = (event, newAlignment) => {\n        settype(newAlignment);\n    };\n\n    return (\n        <ToggleButtonGroup\n            value={type}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n        >\n            <ToggleButton value=\"veg\" aria-label=\"left aligned\">\n                <img src={veg} alt=\"Veg\" style={{width:\"30px\", height:\"30px\"}}/>\n            </ToggleButton>\n            <ToggleButton value=\"all\" aria-label=\"centered\">\n                All\n            </ToggleButton>\n            <ToggleButton value=\"non-veg\" aria-label=\"right aligned\">\n                <img src={nonVeg} alt=\"nonVeg\" style={{width:\"30px\", height:\"30px\"}}/>\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n// import * as React from 'react';\n// import { useTheme } from '@mui/material/styles';\n// import OutlinedInput from '@mui/material/OutlinedInput';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 250,\n//     },\n//   },\n// };\n\n// const names = [\n//   'Oliver Hansen',\n//   'Van Henry',\n//   'April Tucker',\n//   'Ralph Hubbard',\n//   'Omar Alexander',\n//   'Carlos Abbott',\n//   'Miriam Wagner',\n//   'Bradley Wilkerson',\n//   'Virginia Andrews',\n//   'Kelly Snyder',\n// ];\n\n// function getStyles(name, personName, theme) {\n//   return {\n//     fontWeight:\n//       personName.indexOf(name) === -1\n//         ? theme.typography.fontWeightRegular\n//         : theme.typography.fontWeightMedium,\n//   };\n// }\n\n// export default function MultipleSelect() {\n//   const theme = useTheme();\n//   const [personName, setPersonName] = React.useState([]);\n\n//   const handleChange = (event) => {\n//     const {\n//       target: { value },\n//     } = event;\n//     setPersonName(\n//       // On autofill we get a stringified value.\n//       typeof value === 'string' ? value.split(',') : value,\n//     );\n//   };\n\n//   return (\n//     <div>\n//       <FormControl sx={{ m: 1, width: 300 }}>\n//         <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n//         <Select\n//           labelId=\"demo-multiple-name-label\"\n//           id=\"demo-multiple-name\"\n//           multiple\n//           value={personName}\n//           onChange={handleChange}\n//           input={<OutlinedInput label=\"Name\" />}\n//           MenuProps={MenuProps}\n//         >\n//           {names.map((name) => (\n//             <MenuItem\n//               key={name}\n//               value={name}\n//               style={getStyles(name, personName, theme)}\n//             >\n//               {name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}